---
import Layout from '../../layouts/Layout.astro';
export const prerender = true;

interface Character {
  id: number;
  name: string;
  ki: string;
  maxKi: string;
  race: string;
  gender: string;
  description: string;
  image: string;
  affiliation: string;
}

const API_URL = 'https://dragonball-api.com/api';

export async function getStaticPaths() {
  let characters: Character[] = [];

  try {
    const res = await fetch(`${API_URL}/characters?limit=1000`);
    const data = await res.json();
    characters = data.items || [];
  } catch (error) {
    console.error('❌ Error al cargar los personajes:', error);
  }

  return characters.map((character) => ({
    params: { id: character.id.toString() }, // usar ID numérico como string
  }));
}

const { id } = Astro.params;

let character: Character | null = null;

try {
  const res = await fetch(`${API_URL}/characters/${id}`);
  if (!res.ok) throw new Error(`Error HTTP: ${res.status}`);
  character = await res.json();
} catch (error) {
  console.error('❌ Error al cargar personaje:', error);
}
---

<Layout title={character?.name ?? 'Personaje no encontrado'}>
  {character ? (
    <div class="max-w-3xl mx-auto text-center">
      <img src={character.image} alt={character.name} class="mx-auto mb-4 rounded-lg shadow-md" />
      <h1 class="text-3xl font-bold">{character.name}</h1>
      <p class="mt-2 text-gray-600 italic">{character.description}</p>
      <div class="mt-4 text-left">
        <p><strong>Ki:</strong> {character.ki}</p>
        <p><strong>Max Ki:</strong> {character.maxKi}</p>
        <p><strong>Raza:</strong> {character.race}</p>
        <p><strong>Género:</strong> {character.gender}</p>
        <p><strong>Afiliación:</strong> {character.affiliation}</p>
      </div>
    </div>
  ) : (
    <p class="text-center text-red-500 mt-10">Personaje no encontrado.</p>
  )}
</Layout>
